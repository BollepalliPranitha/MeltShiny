install.packages("devtools")
devtools::install_github("JPSieg/MeltR")
install.packages("doParallel")
install.packages("tidyverse")
install.packages("ggrepel")
library(MeltR)
library(shiny)
library(shiny)
runExample("01_hello")
runapp("App-1")
library(shiny); runApp('TestPathlength.R')
# Run the app
shinyApp(ui = ui, server = server)
library(shiny)
library(shiny)
library(dplyr)
library(ggplot2)
#library(MeltR)
library(shiny)
# Define UI ----
ui <- navbarPage("MeltShiny",
navbarMenu("File",
tabPanel("Add Data",
fluidPage(
sidebarLayout(
sidebarPanel(
textInput(label="Enter the Pathlength for each Absorbance Reading(separated by commas)",
placeholder = "E.g: 2,5,3,2,...",
inputId = "pathlengths"),
fileInput(label = "Add Data",
inputId = "inputFile",
multiple = FALSE,
accept = ".csv")
),
mainPanel(
tableOutput("contents")
)
)
)
)
),tabPanel(
"Data Visualization",
plotOutput("plot1"),
plotOutput("plot2"),
plotOutput("plot3"),
plotOutput("plot4")
)
)
server <- function(input,output){
#Reactive list variable
values <- reactiveValues(masterFrame=NULL)
#Upload Project File
upload <- observeEvent(eventExpr =input$inputFile,
handlerExpr = {
req(input$inputFile)
#Declaring variables
pathlengths <- c(unlist(strsplit(input$pathlengths,",")))
req(input$inputFile)
fileName = input$inputFile$datapath
cd <- read.csv(file = fileName,header=FALSE)
df <- cd %>% select_if(~ !any(is.na(.)))
#Creating temporary frame to store sample data
columns <- c("Sample", "Pathlength", "Temperature", "Absorbance")
tempFrame <- data.frame(matrix(nrow = 0, ncol = 4))
colnames(tempFrame) <- columns
readings <- ncol(df)
#Loop that appends sample data
counter <- 1
for (x in 2:readings){
col <- df[x]
sample<-rep(c(counter),times=nrow(df[x]))
pathlength<-rep(c(pathlengths[counter]),times=nrow(df[x]))
col <- df[x]
t <- data.frame(sample,pathlength,df[1],df[x])
names(t) <- names(tempFrame)
tempFrame <- rbind(tempFrame, t)
counter <- counter + 1
}
values$masterFrame <- tempFrame
}
)
output$contents <- renderTable({
return(values$masterFrame)})
output$plot1 = renderPlot({
req(input$inputFile)
sampleData <- values$masterFrame[values$masterFrame$Sample == 1,]
ggplot(sampleData, aes(x = Temperature,
y = Absorbance,
color = factor(Sample))) +geom_point() +theme_classic()
})
output$plot2 = renderPlot({
req(input$inputFile)
sampleData <- values$masterFrame[values$masterFrame$Sample == 2,]
ggplot(sampleData, aes(x = Temperature,
y = Absorbance,
color = factor(Sample))) +geom_point() +theme_classic()
})
output$plot3 = renderPlot({
req(input$inputFile)
sampleData <- values$masterFrame[values$masterFrame$Sample == 3,]
ggplot(sampleData, aes(x = Temperature,
y = Absorbance,
color = factor(Sample))) +geom_point() +theme_classic()
})
output$plot4 = renderPlot({
req(input$inputFile)
sampleData <- values$masterFrame[values$masterFrame$Sample == 4,]
ggplot(sampleData, aes(x = Temperature,
y = Absorbance,
color = factor(Sample))) +geom_point() +theme_classic()
})
}
# Run the app
shinyApp(ui = ui, server = server)
# Run the app
shinyApp(ui = ui, server = server)
runApp('Datavis.R')
ggplot(df %>% filter(Sample == 10), #Only plot sample 10
aes(x = Temperature, y = Absorbance, color = factor(Sample))) +
geom_point() +
theme_classic() +
geom_vline(xintercept = c(15, 70)) #will add horizontal lines to the plot at 15 and 70
library(ggplot2)
ggplot(df %>% filter(Sample == 10), #Only plot sample 10
aes(x = Temperature, y = Absorbance, color = factor(Sample))) +
geom_point() +
theme_classic() +
geom_vline(xintercept = c(15, 70)) #will add horizontal lines to the plot at 15 and 70
library(MeltR)
ggplot(df %>% filter(Sample == 10), #Only plot sample 10
aes(x = Temperature, y = Absorbance, color = factor(Sample))) +
geom_point() +
theme_classic() +
geom_vline(xintercept = c(15, 70)) #will add horizontal lines to the plot at 15 and 70
library(shiny); runApp('code.R')
runApp('code.R')
library(shiny); runApp('C:/Users/cwade/MeltWin2.0/MeltShiny.R')
runApp('C:/Users/cwade/MeltWin2.0/MeltShiny.R')
install.packages("lintr")
library(lintr)
runApp('C:/Users/cwade/MeltWin2.0/MeltShiny.R')
runApp('C:/Users/cwade/MeltWin2.0/MeltShiny.R')
runApp('C:/Users/cwade/MeltWin2.0/MeltShiny.R')
library(shiny); runApp('C:/Users/cwade/MeltWin2.0/MeltShiny.R')
